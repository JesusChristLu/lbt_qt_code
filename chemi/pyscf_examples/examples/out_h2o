#INFO: **** input file is /home/lqs/Work/pyscf-master/examples/H4_test.py ****
#!/usr/bin/env python
import numpy as np
'''
PySCF doesn't have its own input parser.  The input file is a Python program.

Before going throught the rest part, be sure the PySCF path is added in PYTHONPATH.
'''

import pyscf

# mol is an object to hold molecule information.
mol = pyscf.M(
    verbose = 4,
    output = 'out_h2o',
    atom = '''
    h 1.2300000 0.00000 0.000000
    h 1.2300000 1.230000 0.000000
    h 0.000000 1.23000000 0.000000 
    h 0.00000 0.00000 0.000000''',
    basis = 'sto-3g',
)
# For more details, see pyscf/gto/mole.py and pyscf/examples/gto

#
# The package follow the convention that each method has its class to hold
# control parameters.  The calculation can be executed by the kernel function.
# Eg, to do Hartree-Fock, (1) create HF object, (2) call kernel function
#
mf = mol.RHF()
print('E(HF)=%.15g' % mf.kernel())


#
# A post-HF method can be applied.
#

mp2 = mf.MP2().run()
print('E(MP2)=%.15g' % mp2.e_tot)

cc = mf.CCSD().run()
print('E(CCSD)=%.15g' % cc.e_tot)

print(8.987 * (4/1.23 + np.sqrt(2)/1.23) * 1.6 /27.21)
# More examples of pyscf input can be found in
# gto/00-input_mole.py
# gto/01-input_geometry.py
# gto/04-input_basis.py
# gto/05-input_ecp.py
# gto/06-load_mol_from_chkfile.py
# 1-advanced/002-input_script.py
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='iai-quantum', release='3.10.0-1160.76.1.el7.x86_64', version='#1 SMP Wed Aug 10 16:21:17 UTC 2022', machine='x86_64', processor='x86_64')  Threads 128
Python 3.8.12 (default, Oct 12 2021, 13:49:34) 
[GCC 7.5.0]
numpy 1.24.4  scipy 1.10.1
Date: Thu May 16 22:40:52 2024
PySCF version 2.1.1
PySCF path  /home/lqs/Program/psi4conda/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 4
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 H      1.230000000000   0.000000000000   0.000000000000 AA    2.324363133215   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 H      1.230000000000   1.230000000000   0.000000000000 AA    2.324363133215   2.324363133215   0.000000000000 Bohr   0.0
[INPUT]  3 H      0.000000000000   1.230000000000   0.000000000000 AA    0.000000000000   2.324363133215   0.000000000000 Bohr   0.0
[INPUT]  4 H      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0

nuclear repulsion = 2.32933205874946
number of shells = 4
number of NR pGTOs = 12
number of NR cGTOs = 4
basis = sto-3g
ecp = {}
CPU time:         6.27


******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/lqs/Work/pyscf-master/examples/tmpk7za0dmx
max_memory 4000 MB (current use 68 MB)
Set gradient conv threshold to 3.16228e-05
init E= -1.48355676026785

WARN: HOMO 0.00245691012162266 == LUMO 0.00245691012162305

cycle= 1 E= -1.77919388360846  delta_E= -0.296  |g|= 0.00431  |ddm|= 1.95
  HOMO = -0.202084291954242  LUMO = 0.160846529118378
cycle= 2 E= -1.77922825633287  delta_E= -3.44e-05  |g|= 0.00216  |ddm|= 0.019
  HOMO = -0.202121294203724  LUMO = 0.16088354428605
cycle= 3 E= -1.77924025522635  delta_E= -1.2e-05  |g|= 0.00104  |ddm|= 0.0134
  HOMO = -0.202125121449534  LUMO = 0.160887353929428
cycle= 4 E= -1.77924326990632  delta_E= -3.01e-06  |g|= 5.07e-08  |ddm|= 0.0106
  HOMO = -0.202123064703063  LUMO = 0.160885301283165
cycle= 5 E= -1.77924326990632  delta_E= -8.88e-15  |g|= 6.32e-09  |ddm|= 4.82e-07
  HOMO = -0.202122771545009  LUMO = 0.160885008709148
Extra cycle  E= -1.77924326990632  delta_E= 8.88e-16  |g|= 3.77e-09  |ddm|= 2.86e-08
converged SCF energy = -1.77924326990632

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 2, nmo = 4
max_memory 4000 MB (current use 79 MB)
E(MP2) = -1.85814150041384  E_corr = -0.0788982305075135

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 2, nmo = 4
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 100 MB)
Init t2, MP2 energy = -1.85814150041384  E_corr(MP2) -0.0788982305075135
Init E_corr(CCSD) = -0.0788982305075136
cycle = 1  E_corr(CCSD) = -0.11419033250198  dE = -0.035292102  norm(t1,t2) = 0.139478
cycle = 2  E_corr(CCSD) = -0.13369219631595  dE = -0.0195018638  norm(t1,t2) = 0.111299
cycle = 3  E_corr(CCSD) = -0.178013318249305  dE = -0.0443211219  norm(t1,t2) = 0.093299
cycle = 4  E_corr(CCSD) = -0.172981956610392  dE = 0.00503136164  norm(t1,t2) = 0.0429875
cycle = 5  E_corr(CCSD) = -0.206136019393253  dE = -0.0331540628  norm(t1,t2) = 0.045302
cycle = 6  E_corr(CCSD) = -0.205506956073252  dE = 0.00062906332  norm(t1,t2) = 0.0286715
cycle = 7  E_corr(CCSD) = -0.200317128445337  dE = 0.00518982763  norm(t1,t2) = 0.0202468
cycle = 8  E_corr(CCSD) = -0.19756378916485  dE = 0.00275333928  norm(t1,t2) = 0.00715279
cycle = 9  E_corr(CCSD) = -0.197319645648811  dE = 0.000244143516  norm(t1,t2) = 0.000617313
cycle = 10  E_corr(CCSD) = -0.197317183053129  dE = 2.46259568e-06  norm(t1,t2) = 3.81514e-06
cycle = 11  E_corr(CCSD) = -0.1973194838982  dE = -2.30084507e-06  norm(t1,t2) = 7.43396e-06
cycle = 12  E_corr(CCSD) = -0.197319920191605  dE = -4.36293405e-07  norm(t1,t2) = 1.60449e-06
cycle = 13  E_corr(CCSD) = -0.197320123308555  dE = -2.0311695e-07  norm(t1,t2) = 4.9775e-07
cycle = 14  E_corr(CCSD) = -0.197320124198898  dE = -8.90343105e-10  norm(t1,t2) = 1.392e-08
CCSD converged
E(CCSD) = -1.976563394105223  E_corr = -0.1973201241988984
